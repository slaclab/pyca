name: PCDS Standard Testing

on:
  push:
  pull_request:
  release:
    types:
      - created

jobs:
  pre-commit:
    name: "pre-commit checks"
    uses: pcdshub/pcds-ci-helpers/.github/workflows/pre-commit.yml@master
    with:
      args: "--all-files"

  conda-test:
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: "3.9"
          deploy-on-success: true
        - python-version: "3.10"
        - python-version: "3.11"
          experimental: true
        - python-version: "3.12"
          experimental: true

    name: "Conda"
    uses: pcdshub/pcds-ci-helpers/.github/workflows/python-conda-test.yml@master
    secrets: inherit
    with:
      package-name: "pyca"
      python-version: ${{ matrix.python-version }}
      experimental: ${{ matrix.experimental || false }}
      deploy-on-success: ${{ matrix.deploy-on-success || false }}
      testing-extras: ""
      system-packages: ""
      use-setuptools-scm: true

  pip-test:
    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: "3.9"
          deploy-on-success: true
        - python-version: "3.10"
        - python-version: "3.11"
          experimental: true
        - python-version: "3.12"
          experimental: true

    name: "Pip"
    uses: pcdshub/pcds-ci-helpers/.github/workflows/python-pip-test.yml@master
    secrets: inherit
    with:
      package-name: "pyca"
      python-version: ${{ matrix.python-version }}
      experimental: ${{ matrix.experimental || false }}
      deploy-on-success: ${{ matrix.deploy-on-success || false }}
      system-packages: ""
      testing-extras: ""

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_SKIP: pp*
          CIBW_BUILD_FRONTEND: "pip; args: --no-build-isolation"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_BEFORE_BUILD: >
            pip install setuptools_dso epicscorelibs pyepics &&
            export LD_LIBRARY_PATH=$(python scripts/get_library_paths.py)
          CIBW_REPAIR_WHEEL_COMMAND_LINUX: ""
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
